#!/usr/bin/env python3
"""
Script principal pour MetaSTAAQ - T√©l√©chargement et traitement des donn√©es
T√©l√©charge les donn√©es PVGIS et ENTSO-E sur 5 ans et les traite
"""

import os
import sys
from datetime import datetime

# Import des modules locaux
try:
    from utils.telecharger_donnees_api import telecharger_donnees_pvgis_multi_annees, telecharger_donnees_entsoe_5_ans
    from process_prix_spot_data import main as process_prix_spot
except ImportError as e:
    print(f"‚ùå Erreur d'import: {e}")
    print("Assurez-vous que les fichiers 'telecharger_donnees_api.py' et 'process_prix_spot_data.py' sont pr√©sents")
    sys.exit(1)

def main():
    """Fonction principale qui orchestre le t√©l√©chargement et le processing"""
    print("üöÄ METASTAAQ - T√âL√âCHARGEMENT ET TRAITEMENT DES DONN√âES")
    print("="*70)
    print(f"‚è∞ D√©but du traitement: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # --- PARAMETRES ---
    # Coordonn√©es de Meaux (77)
    LATITUDE_MEAUX = 48.96
    LONGITUDE_MEAUX = 2.88
    
    # Cl√© API ENTSO-E
    ENTSOE_API_KEY = os.getenv('ENTSOE_API_TOKEN', "9d9b8840-56e2-4993-9385-47cfe2b8183f")
    
    # Ann√©es √† t√©l√©charger
    ANNEE_DEBUT = 2020
    ANNEE_FIN = 2024
    
    print(f"üìç Localisation: Meaux (Lat: {LATITUDE_MEAUX}, Lon: {LONGITUDE_MEAUX})")
    print(f"üìÖ P√©riode: {ANNEE_DEBUT} - {ANNEE_FIN} (5 ann√©es)")
    
    # Variables pour suivre le succ√®s des op√©rations
    fichier_pv = None
    fichier_prix = None
    fichier_prix_processed = None
    
    # ================================
    # √âTAPE 1: T√âL√âCHARGEMENT DES DONN√âES SOLAIRES
    # ================================
    print("\n" + "="*50)
    print("üìä √âTAPE 1: DONN√âES SOLAIRES PVGIS")
    print("="*50)
    
    try:
        fichier_pv = telecharger_donnees_pvgis_multi_annees(
            LATITUDE_MEAUX, 
            LONGITUDE_MEAUX, 
            ANNEE_DEBUT, 
            ANNEE_FIN
        )
        if fichier_pv:
            print(f"‚úÖ Donn√©es solaires t√©l√©charg√©es: {fichier_pv}")
        else:
            print("‚ùå √âchec du t√©l√©chargement des donn√©es solaires")
    except Exception as e:
        print(f"‚ùå Erreur lors du t√©l√©chargement des donn√©es solaires: {e}")
    
    # ================================
    # √âTAPE 2: T√âL√âCHARGEMENT DES PRIX SPOT
    # ================================
    print("\n" + "="*50)
    print("üí∞ √âTAPE 2: DONN√âES PRIX SPOT ENTSO-E")
    print("="*50)
    
    try:
        fichier_prix = telecharger_donnees_entsoe_5_ans(ENTSOE_API_KEY, pays_code='FR')
        if fichier_prix:
            print(f"‚úÖ Donn√©es prix spot t√©l√©charg√©es: {fichier_prix}")
        else:
            print("‚ùå √âchec du t√©l√©chargement des donn√©es prix spot")
    except Exception as e:
        print(f"‚ùå Erreur lors du t√©l√©chargement des donn√©es prix spot: {e}")
    
    # ================================
    # √âTAPE 3: TRAITEMENT DES DONN√âES PRIX SPOT
    # ================================
    print("\n" + "="*50)
    print("üîÑ √âTAPE 3: TRAITEMENT DES DONN√âES PRIX SPOT")
    print("="*50)
    
    if fichier_prix:
        try:
            df_processed, fichier_prix_processed = process_prix_spot(fichier_prix)
            if df_processed is not None:
                print(f"‚úÖ Donn√©es prix spot trait√©es: {fichier_prix_processed}")
            else:
                print("‚ùå √âchec du traitement des donn√©es prix spot")
        except Exception as e:
            print(f"‚ùå Erreur lors du traitement des donn√©es prix spot: {e}")
    else:
        print("‚ö†Ô∏è  Pas de fichier prix spot √† traiter")
    
    # ================================
    # R√âSUM√â FINAL
    # ================================
    print("\n" + "="*70)
    print("üìã R√âSUM√â FINAL")
    print("="*70)
    
    print(f"‚è∞ Fin du traitement: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("\nüìÅ Fichiers g√©n√©r√©s:")
    
    if fichier_pv:
        print(f"   ‚úÖ Donn√©es solaires: {fichier_pv}")
    else:
        print(f"   ‚ùå Donn√©es solaires: √âchec")
    
    if fichier_prix:
        print(f"   ‚úÖ Donn√©es prix spot brutes: {fichier_prix}")
    else:
        print(f"   ‚ùå Donn√©es prix spot brutes: √âchec")
    
    if fichier_prix_processed:
        print(f"   ‚úÖ Donn√©es prix spot trait√©es: {fichier_prix_processed}")
    else:
        print(f"   ‚ùå Donn√©es prix spot trait√©es: √âchec")
    
    # V√©rifier si tout s'est bien pass√©
    succes_total = all([fichier_pv, fichier_prix, fichier_prix_processed])
    
    if succes_total:
        print("\nüéâ SUCC√àS: Toutes les donn√©es ont √©t√© t√©l√©charg√©es et trait√©es avec succ√®s!")
        print("üëâ Vous pouvez maintenant utiliser les fichiers CSV g√©n√©r√©s pour vos analyses")
    else:
        print("\n‚ö†Ô∏è  SUCC√àS PARTIEL: Certaines op√©rations ont √©chou√©")
        print("üëâ V√©rifiez les messages d'erreur ci-dessus")
    
    print("\n" + "="*70)
    
    return succes_total

if __name__ == "__main__":
    try:
        success = main()
        if success:
            print("üèÅ Script termin√© avec succ√®s!")
            sys.exit(0)
        else:
            print("üèÅ Script termin√© avec des erreurs")
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  Script interrompu par l'utilisateur")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå Erreur fatale: {e}")
        sys.exit(1) 